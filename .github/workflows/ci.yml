name: CI
env:
  AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
  AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  PUBLIC_BUILD: ${{ github.ref_name }}-${{ github.run_number }}
  PRISMA_FIELD_ENCRYPTION_KEY: ${{ secrets.PRISMA_FIELD_ENCRYPTION_KEY }}
  PREVIEW_DOMAIN: notes-dev.dejanvasic.me
  PUBLIC_BASE_URL: ${{ vars.PUBLIC_BASE_URL }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  SES_AWS_ACCESS_KEY_ID: ${{ secrets.SES_AWS_ACCESS_KEY_ID }}
  SES_AWS_SECRET_ACCESS_KEY: ${{ secrets.SES_AWS_SECRET_ACCESS_KEY }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main
jobs:
  build:
    name: Check and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci
      - name: Add Svelte Check annotator
        uses: prgm-dev/svelte-check-pr-annotator@main
      - name: Run Svelte-Check
        run: npm run check
      - name: Run ESLint
        run: npm run lint
      - name: Run unit tests
        run: npm run test:unit
  test:
    env:
      TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      PUBLIC_BASE_URL: http://localhost:5173
      HOME: /root
    name: Test Playwright
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-jammy
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Run Playwright tests
        run: npx playwright test --reporter=list
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results
          path: test-results/
          retention-days: 7
          if-no-files-found: warn

  deploy_preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [build, test]
    concurrency: preview_deploy
    environment:
      name: preview
      url: https://${{ env.PREVIEW_DOMAIN }}
    steps:
      - uses: actions/checkout@v5
      - name: Deploy
        run: |
          npm install --global vercel@canary
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
          vercel alias --token=${{ secrets.VERCEL_TOKEN }} set "$url" ${{ env.PREVIEW_DOMAIN }}
          echo "deployment_url=$url" >> $GITHUB_ENV
