// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "debian-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id
  createdAt         DateTime           @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime           @updatedAt @db.Timestamptz(6)
  authId            String             @unique
  email             String             @unique
  emailVerified     Boolean
  name              String?
  picture           String?
  boards            Board[]
  noteCollaborators NoteCollaborator[]
}

model Board {
  id        String   @id
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  noteOrder String[]

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  notes  Note[]
}

model Note {
  id                String             @id
  createdAt         DateTime           @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime           @updatedAt @db.Timestamptz(6)
  text              String             @db.Text /// @encrypted
  textPlain         String             @db.Text /// @encrypted
  colour            String?
  boardId           String
  board             Board              @relation(fields: [boardId], references: [id], onDelete: Cascade)
  noteCollaborators NoteCollaborator[]
  noteInvites       NoteInvite[]
}

model NoteCollaborator {
  id        String   @id
  noteId    String
  userId    String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  note      Note     @relation(fields: [noteId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model NoteInvite {
  id        String   @id
  noteId    String
  email     String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  note      Note     @relation(fields: [noteId], references: [id], onDelete: Cascade)
}
